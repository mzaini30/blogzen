{
  "postingan": [
    {
      "judul": "Cara menggunakan Svelte",
      "deskripsi": "Membuat website lebih cepat, ringan, dan menyenangkan",
      "isi": "## Instalasi\n\n```bash\nnpx degit sveltejs/template nama-proyekmu\n```\n\nKemudian, akan terdownlod tuh template Svelte di laptopmu. Nah, sekarang masuk ke `nama-proyekmu` dan jalankan:\n\n```bash\nnpm i\n```\n\nSetelah selesai instalasi, jalankan:\n\n```bash\nnpm run dev\n```\n\nNah, sekarang kamu buka `localhost:5000`. Lalu, akan muncul Hello World ala Svelte...",
      "slug": "cara-menggunakan-svelte",
      "id": 4
    },
    {
      "judul": "Sistem di balik blog ini",
      "deskripsi": "Svelte + Page JS + JSON Server",
      "isi": "## Filosofi\n\nAku mau website yang cepat. Dan kebetulan juga lagi suka sama Svelte karena mudah, sintaksnya enak dilihat, dan bundlenya pun kecil.\n\nTerus, untuk backendnya sih maunya ya nggak usah buat lagi sih. Capek. Akhirnya, aku teringat sama JSON Server. Jadi, aku cuma perlu menyiapkan satu file `db.json` yang kemudian akan diolah oleh JSON Server menggunakan semua metode HTTP Request. Jadi, aku nggak perlu coding sistemnya lagi. Tinggal HTTP Request aja dari linknya berdasarkan routes dan param yang sudah dijelaskan di docsnya.\n\n## Bedah sistem blog\n\nBlog ini kubagi jadi dua sistem yaitu ketika user membukanya dan ketika aku yang membukanya. Jadi, bisa dibilang _ketika user membukanya_ adalah sistem yang sudah di level _production_ sedangkan yang _ketika aku membukanya_ adalah level _development_.\n\nPerbedaannya bisa digambarkan seperti tabel di bawah ini:\n\n| Development | Production |\n|---|---|\n| Menggunakan Svelte + JSON Server | Menggunakan Svelte |\n| Akses baca tulis | Akses baca |\n| Browser + Node JS | Browser |\n\n## Perbedaan sistem blog ini dengan SSG\n\nStatic site generator (SSG) itu sistemnya adalah menggabungkan file-file layout dengan file-file Markdown menjadi sebuah website utuh.\n\nTentu sangat berbeda dengan blog ini.\n\n## Deploy dengan Github Action\n\nUntuk deployment blog ini, aku menggunakan Github Action, sebuah fitur dari Github untuk deployment. Tentu, membantu banget fitur ini.\n\n```yaml\nname: build svelte\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  deploy:\n    runs-on: ubuntu-18.04\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: true\n\n      - name: Setup Node\n        uses: actions/setup-node@v1\n        with:\n          node-version: \"14.x\"\n\n      - name: Setup Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.x\"\n\n      - name: Cache dependencies\n        uses: actions/cache@v1\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n          restore-keys: ${{ runner.os }}-node-\n\n      - name: Clone Index\n        run: python clone-index.py\n\n      - name: Generate sitemap\n        run: python generate-sitemap.py\n\n      - name: Pecah JSON\n        run: python pecah-json.py\n\n      - name: Install\n        run: npm i\n\n      - name: Build\n        run: npm run build\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\n## Clone index\n\n```python\nimport os, json\n\nos.chdir(\"public\")\nwith open(\"db.json\") as f:\n data = json.load(f)\nslug = []\nfor x in data[\"postingan\"]:\n slug.append(x[\"slug\"])\nfor x in slug:\n os.system('cp index.html ' + x + '.html')\nos.system(\"cp index.html 404.html\")\nos.system(\"cp index.html cari.html\")\n```\n\n## Generate sitemap\n\n```python\nimport os, json\n\nos.chdir(\"public\")\nwith open(\"db.json\") as f:\n\tdata = json.load(f)\nslug = []\nfor x in data[\"postingan\"]:\n\tslug.append(x[\"slug\"])\nslug.reverse()\nsitemap = '<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">'\nfor x in slug:\n\tsitemap += '<url><loc>https://blogzen.js.org/' + x + '</loc></url>'\nsitemap += '<url><loc>https://blogzen.js.org/</loc></url>'\nsitemap += '</urlset>'\nolah = open(\"sitemap.xml\", \"w\")\nolah.write(sitemap)\nolah.close()\n```\n\n## Pemecahan file JSON\n\n```python\nimport os, json\n\nos.chdir(\"public\")\nwith open(\"db.json\") as f:\n\tdata = json.load(f)\nslug = []\njudul = []\ndeskripsi = []\nisi = []\nfor x in data[\"postingan\"]:\n\tslug.append(x[\"slug\"])\n\tjudul.append(x[\"judul\"])\n\tdeskripsi.append(x[\"deskripsi\"])\n\tisi.append(x[\"isi\"])\n\nberanda = []\nfor (n, x) in enumerate(slug):\n\tberanda.append({\"slug\": x, \"judul\": judul[n], \"deskripsi\": deskripsi[n]})\nsimpan_beranda = open(\"beranda.json\", \"w\")\nsimpan_beranda.write(json.dumps(beranda))\nsimpan_beranda.close()\n\nfor (n, x) in enumerate(slug):\n\ttulis = open(x + '.json', 'w')\n\ttulis.write(json.dumps({\"judul\": judul[n], \"deskripsi\": deskripsi[n], \"isi\": isi[n]}))\n\ttulis.close()\n```",
      "slug": "sistem-di-balik-blog-ini",
      "id": 5
    },
    {
      "judul": "Router di Svelte JS",
      "deskripsi": "Mencoba menerapkan keunggulan SPA!",
      "isi": "Ada dua macam router yaitu yang menggunakan hash sama yang nggak. Kalau menggunakan hash, cocok pakai **svelte-spa-router**. Sedangkan kalau nggak pakai hash, pakai **page**.\n\n## Menggunakan Svelte SPA Router\n\nInstall dengan:\n\n```bash\nnpm i svelte-spa-router\n```\n\n## Menggunakan Page\n\nInstall dengan:\n\n```bash\nnpm i page\n```",
      "slug": "router-di-svelte-js",
      "id": 7
    },
    {
      "judul": "Svelte vs framework lainnya",
      "deskripsi": "Akankah Svelte menjadi pembuka era JavaScript baru?",
      "isi": "## Hasil benchmark\n\n![Bencmark](https://res.cloudinary.com/practicaldev/image/fetch/s--nj6O-fJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/DssqmdjVsAE8Il4%3Fformat%3Djpg%26name%3Dlarge)\n\n## Sintaks yang lebih sederhana\n\n### Svelte\n\n```html\n<script>\n    let count = 0;\n\n    const increment = () => count += 1;\n    const decrement = () => count -= 1;\n</script>\n\n<div class=\"counter-component\">\n    <p>The count is {count}!</p>\n    <button on:click={increment}>Increment +</button>\n    <button on:click={decrement}>Decrement -</button>\n</div>\n\n<style>\n    .counter-component {\n        font-family: Arial;\n        padding: 15px;\n    }\n</style>\n```\n\n### React\n\n```javascript\nimport React, { useState } from \"react\";\n\nconst Counter = () => {\n    const [ count, setCount ] = useState(0);\n\n    const increment = () => setCount(count + 1);\n    const decrement = () => setCount(count - 1);\n\n    return(\n        <div style={{\n            padding: \"15px\",\n            fontFamily: \"Arial\"\n        }} className=\"counter-component\">\n            <p>The count is {count}!</p>\n            <button onClick={increment}>Increment +</button>\n            <button onClick={decrement}>Decrement -</button>\n        </div>\n    ); \n}\n\nexport default Counter;\n```",
      "slug": "svelte-vs-framework-lainnya",
      "id": 8
    },
    {
      "judul": "Mengisi waktu kosong",
      "deskripsi": "Mungkin ini bisa jadi solusi untuk mengisi waktu kosongmu",
      "isi": "Waktu kosong itu berbahaya. Waktu kosong adalah ujian bagi kita untuk melihat apakah kita ini orang yang produktif ataukah orang yang nganggur. Kalau kita terbiasa produktif, maka kita akan produktif terus. Kalau terbiasa nganggur, nantinya akan nganggur terus. Nah, biasanya kan kalau ada waktu kosong, pengennya ya nggak ngapa-ngapain. Makanya kubilang **berbahaya**.\n\n## Menghafal atau memurajaah hafalan Qur'an\n\n## Membaca buku\n\n## Blogging",
      "slug": "mengisi-waktu-kosong",
      "id": 9
    },
    {
      "judul": "Langkah menjadi developer frontend web junior",
      "deskripsi": "Are you ready?",
      "isi": "Dunia frontend, atau tepatnya dunia Javascript adalah dunia yang sangat dinamis. Segalanya bergerak dengan sangat cepat. Mungkin pertama kali kita mengenal Javascript, kita sudah berkenalan dengan jQuery yang menurut kita tu magic banget. Lalu, nggak lama kemudian, kita dituntut untuk bisa menguasai AJAX. Lalu, kita dikagetkan dengan kehadiran React dengan Virtual DOMnya, kemudian ada Angular, lalu ada Vue yang merupakan penyederhanaan dari Angular. Dan semua cerita ini masih terus berlanjut.\n\n## Markdown\n\n## HTML\n\n## CSS\n\n## JavaScript\n\n## Svelte\n\n## Database\n\n### Dexie JS\n\n### JSON Server\n\n## Github Action\n\n### Node JS\n\n### Python\n\n### Hugo\n\n### Gitbook\n\n### Gitbook to ebooks",
      "slug": "langkah-menjadi-developer-frontend-junior",
      "id": 13
    }
  ]
}